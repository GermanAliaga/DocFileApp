import "package:docfileapp/theme/color_scheme.dart";
import "package:flutter/material.dart";

class MaterialTheme {
  final TextTheme textTheme;

  const MaterialTheme(this.textTheme);

  static ColorScheme lightScheme() {
    return const ColorScheme(
      brightness: Brightness.light,
      primary: Color(0xff1b6585),
      surfaceTint: Color(0xff1b6585),
      onPrimary: Color(0xffffffff),
      primaryContainer: Color(0xffc3e8ff),
      onPrimaryContainer: Color(0xff004c68),
      secondary: Color(0xff35618e),
      onSecondary: Color(0xffffffff),
      secondaryContainer: Color(0xffd1e4ff),
      onSecondaryContainer: Color(0xff194975),
      tertiary: Color(0xff32628d),
      onTertiary: Color(0xffffffff),
      tertiaryContainer: Color(0xffcfe4ff),
      onTertiaryContainer: Color(0xff134a74),
      error: Color(0xffba1a1a),
      onError: Color(0xffffffff),
      errorContainer: Color(0xffffdad6),
      onErrorContainer: Color(0xff93000a),
      surface: Color(0xfff6fafe),
      onSurface: Color(0xff171c1f),
      onSurfaceVariant: Color(0xff41484d),
      outline: Color(0xff71787d),
      outlineVariant: Color(0xffc0c7cd),
      shadow: Color(0xff000000),
      scrim: Color(0xff000000),
      inverseSurface: Color(0xff2c3134),
      inversePrimary: Color(0xff8fcff3),
      primaryFixed: Color(0xffc3e8ff),
      onPrimaryFixed: Color(0xff001e2c),
      primaryFixedDim: Color(0xff8fcff3),
      onPrimaryFixedVariant: Color(0xff004c68),
      secondaryFixed: Color(0xffd1e4ff),
      onSecondaryFixed: Color(0xff001d36),
      secondaryFixedDim: Color(0xffa0cafd),
      onSecondaryFixedVariant: Color(0xff194975),
      tertiaryFixed: Color(0xffcfe4ff),
      onTertiaryFixed: Color(0xff001d34),
      tertiaryFixedDim: Color(0xff9dcafc),
      onTertiaryFixedVariant: Color(0xff134a74),
      surfaceDim: Color(0xffd6dade),
      surfaceBright: Color(0xfff6fafe),
      surfaceContainerLowest: Color(0xffffffff),
      surfaceContainerLow: Color(0xfff0f4f8),
      surfaceContainer: Color(0xffeaeef2),
      surfaceContainerHigh: Color(0xffe4e9ec),
      surfaceContainerHighest: Color(0xffdfe3e7),
    );
  }

  ThemeData light() {
    return theme(lightScheme());
  }

  static ColorScheme lightMediumContrastScheme() {
    return const ColorScheme(
      brightness: Brightness.light,
      primary: Color(0xff003b51),
      surfaceTint: Color(0xff1b6585),
      onPrimary: Color(0xffffffff),
      primaryContainer: Color(0xff2f7495),
      onPrimaryContainer: Color(0xffffffff),
      secondary: Color(0xff003861),
      onSecondary: Color(0xffffffff),
      secondaryContainer: Color(0xff45709e),
      onSecondaryContainer: Color(0xffffffff),
      tertiary: Color(0xff00395e),
      onTertiary: Color(0xffffffff),
      tertiaryContainer: Color(0xff42709d),
      onTertiaryContainer: Color(0xffffffff),
      error: Color(0xff740006),
      onError: Color(0xffffffff),
      errorContainer: Color(0xffcf2c27),
      onErrorContainer: Color(0xffffffff),
      surface: Color(0xfff6fafe),
      onSurface: Color(0xff0d1215),
      onSurfaceVariant: Color(0xff30373c),
      outline: Color(0xff4c5358),
      outlineVariant: Color(0xff676e73),
      shadow: Color(0xff000000),
      scrim: Color(0xff000000),
      inverseSurface: Color(0xff2c3134),
      inversePrimary: Color(0xff8fcff3),
      primaryFixed: Color(0xff2f7495),
      onPrimaryFixed: Color(0xffffffff),
      primaryFixedDim: Color(0xff065b7b),
      onPrimaryFixedVariant: Color(0xffffffff),
      secondaryFixed: Color(0xff45709e),
      onSecondaryFixed: Color(0xffffffff),
      secondaryFixedDim: Color(0xff2a5784),
      onSecondaryFixedVariant: Color(0xffffffff),
      tertiaryFixed: Color(0xff42709d),
      onTertiaryFixed: Color(0xffffffff),
      tertiaryFixedDim: Color(0xff275883),
      onTertiaryFixedVariant: Color(0xffffffff),
      surfaceDim: Color(0xffc3c7cb),
      surfaceBright: Color(0xfff6fafe),
      surfaceContainerLowest: Color(0xffffffff),
      surfaceContainerLow: Color(0xfff0f4f8),
      surfaceContainer: Color(0xffe4e9ec),
      surfaceContainerHigh: Color(0xffd9dde1),
      surfaceContainerHighest: Color(0xffced2d6),
    );
  }

  ThemeData lightMediumContrast() {
    return theme(lightMediumContrastScheme());
  }

  static ColorScheme lightHighContrastScheme() {
    return const ColorScheme(
      brightness: Brightness.light,
      primary: Color(0xff003043),
      surfaceTint: Color(0xff1b6585),
      onPrimary: Color(0xffffffff),
      primaryContainer: Color(0xff004f6b),
      onPrimaryContainer: Color(0xffffffff),
      secondary: Color(0xff002e51),
      onSecondary: Color(0xffffffff),
      secondaryContainer: Color(0xff1c4b77),
      onSecondaryContainer: Color(0xffffffff),
      tertiary: Color(0xff002e4e),
      onTertiary: Color(0xffffffff),
      tertiaryContainer: Color(0xff174c76),
      onTertiaryContainer: Color(0xffffffff),
      error: Color(0xff600004),
      onError: Color(0xffffffff),
      errorContainer: Color(0xff98000a),
      onErrorContainer: Color(0xffffffff),
      surface: Color(0xfff6fafe),
      onSurface: Color(0xff000000),
      onSurfaceVariant: Color(0xff000000),
      outline: Color(0xff262d32),
      outlineVariant: Color(0xff434a4f),
      shadow: Color(0xff000000),
      scrim: Color(0xff000000),
      inverseSurface: Color(0xff2c3134),
      inversePrimary: Color(0xff8fcff3),
      primaryFixed: Color(0xff004f6b),
      onPrimaryFixed: Color(0xffffffff),
      primaryFixedDim: Color(0xff00374c),
      onPrimaryFixedVariant: Color(0xffffffff),
      secondaryFixed: Color(0xff1c4b77),
      onSecondaryFixed: Color(0xffffffff),
      secondaryFixedDim: Color(0xff00345b),
      onSecondaryFixedVariant: Color(0xffffffff),
      tertiaryFixed: Color(0xff174c76),
      onTertiaryFixed: Color(0xffffffff),
      tertiaryFixedDim: Color(0xff003559),
      onTertiaryFixedVariant: Color(0xffffffff),
      surfaceDim: Color(0xffb5b9bd),
      surfaceBright: Color(0xfff6fafe),
      surfaceContainerLowest: Color(0xffffffff),
      surfaceContainerLow: Color(0xffedf1f5),
      surfaceContainer: Color(0xffdfe3e7),
      surfaceContainerHigh: Color(0xffd1d5d9),
      surfaceContainerHighest: Color(0xffc3c7cb),
    );
  }

  ThemeData lightHighContrast() {
    return theme(lightHighContrastScheme());
  }

  static ColorScheme darkScheme() {
    return const ColorScheme(
      brightness: Brightness.dark,
      primary: Color(0xff8fcff3),
      surfaceTint: Color(0xff8fcff3),
      onPrimary: Color(0xff003549),
      primaryContainer: Color(0xff004c68),
      onPrimaryContainer: Color(0xffc3e8ff),
      secondary: Color(0xffa0cafd),
      onSecondary: Color(0xff003258),
      secondaryContainer: Color(0xff194975),
      onSecondaryContainer: Color(0xffd1e4ff),
      tertiary: Color(0xff9dcafc),
      onTertiary: Color(0xff003355),
      tertiaryContainer: Color(0xff134a74),
      onTertiaryContainer: Color(0xffcfe4ff),
      error: Color(0xffffb4ab),
      onError: Color(0xff690005),
      errorContainer: Color(0xff93000a),
      onErrorContainer: Color(0xffffdad6),
      surface: Color(0xff0f1417),
      onSurface: Color(0xffdfe3e7),
      onSurfaceVariant: Color(0xffc0c7cd),
      outline: Color(0xff8a9297),
      outlineVariant: Color(0xff41484d),
      shadow: Color(0xff000000),
      scrim: Color(0xff000000),
      inverseSurface: Color(0xffdfe3e7),
      inversePrimary: Color(0xff1b6585),
      primaryFixed: Color(0xffc3e8ff),
      onPrimaryFixed: Color(0xff001e2c),
      primaryFixedDim: Color(0xff8fcff3),
      onPrimaryFixedVariant: Color(0xff004c68),
      secondaryFixed: Color(0xffd1e4ff),
      onSecondaryFixed: Color(0xff001d36),
      secondaryFixedDim: Color(0xffa0cafd),
      onSecondaryFixedVariant: Color(0xff194975),
      tertiaryFixed: Color(0xffcfe4ff),
      onTertiaryFixed: Color(0xff001d34),
      tertiaryFixedDim: Color(0xff9dcafc),
      onTertiaryFixedVariant: Color(0xff134a74),
      surfaceDim: Color(0xff0f1417),
      surfaceBright: Color(0xff353a3d),
      surfaceContainerLowest: Color(0xff0a0f12),
      surfaceContainerLow: Color(0xff171c1f),
      surfaceContainer: Color(0xff1b2023),
      surfaceContainerHigh: Color(0xff262b2e),
      surfaceContainerHighest: Color(0xff303538),
    );
  }

  ThemeData dark() {
    return theme(darkScheme());
  }

  static ColorScheme darkMediumContrastScheme() {
    return const ColorScheme(
      brightness: Brightness.dark,
      primary: Color(0xffb4e3ff),
      surfaceTint: Color(0xff8fcff3),
      onPrimary: Color(0xff00293a),
      primaryContainer: Color(0xff5798ba),
      onPrimaryContainer: Color(0xff000000),
      secondary: Color(0xffc6deff),
      onSecondary: Color(0xff002746),
      secondaryContainer: Color(0xff6a94c4),
      onSecondaryContainer: Color(0xff000000),
      tertiary: Color(0xffc4dfff),
      onTertiary: Color(0xff002744),
      tertiaryContainer: Color(0xff6794c3),
      onTertiaryContainer: Color(0xff000000),
      error: Color(0xffffd2cc),
      onError: Color(0xff540003),
      errorContainer: Color(0xffff5449),
      onErrorContainer: Color(0xff000000),
      surface: Color(0xff0f1417),
      onSurface: Color(0xffffffff),
      onSurfaceVariant: Color(0xffd6dde3),
      outline: Color(0xffacb3b9),
      outlineVariant: Color(0xff8a9197),
      shadow: Color(0xff000000),
      scrim: Color(0xff000000),
      inverseSurface: Color(0xffdfe3e7),
      inversePrimary: Color(0xff004e6a),
      primaryFixed: Color(0xffc3e8ff),
      onPrimaryFixed: Color(0xff00131d),
      primaryFixedDim: Color(0xff8fcff3),
      onPrimaryFixedVariant: Color(0xff003b51),
      secondaryFixed: Color(0xffd1e4ff),
      onSecondaryFixed: Color(0xff001225),
      secondaryFixedDim: Color(0xffa0cafd),
      onSecondaryFixedVariant: Color(0xff003861),
      tertiaryFixed: Color(0xffcfe4ff),
      onTertiaryFixed: Color(0xff001223),
      tertiaryFixedDim: Color(0xff9dcafc),
      onTertiaryFixedVariant: Color(0xff00395e),
      surfaceDim: Color(0xff0f1417),
      surfaceBright: Color(0xff404548),
      surfaceContainerLowest: Color(0xff04080a),
      surfaceContainerLow: Color(0xff191e21),
      surfaceContainer: Color(0xff24292b),
      surfaceContainerHigh: Color(0xff2e3336),
      surfaceContainerHighest: Color(0xff393e41),
    );
  }

  ThemeData darkMediumContrast() {
    return theme(darkMediumContrastScheme());
  }

  static ColorScheme darkHighContrastScheme() {
    return const ColorScheme(
      brightness: Brightness.dark,
      primary: Color(0xffe1f2ff),
      surfaceTint: Color(0xff8fcff3),
      onPrimary: Color(0xff000000),
      primaryContainer: Color(0xff8bcbef),
      onPrimaryContainer: Color(0xff000d15),
      secondary: Color(0xffe8f0ff),
      onSecondary: Color(0xff000000),
      secondaryContainer: Color(0xff9cc6f9),
      onSecondaryContainer: Color(0xff000c1b),
      tertiary: Color(0xffe7f1ff),
      onTertiary: Color(0xff000000),
      tertiaryContainer: Color(0xff99c7f8),
      onTertiaryContainer: Color(0xff000c1a),
      error: Color(0xffffece9),
      onError: Color(0xff000000),
      errorContainer: Color(0xffffaea4),
      onErrorContainer: Color(0xff220001),
      surface: Color(0xff0f1417),
      onSurface: Color(0xffffffff),
      onSurfaceVariant: Color(0xffffffff),
      outline: Color(0xffeaf1f7),
      outlineVariant: Color(0xffbcc3c9),
      shadow: Color(0xff000000),
      scrim: Color(0xff000000),
      inverseSurface: Color(0xffdfe3e7),
      inversePrimary: Color(0xff004e6a),
      primaryFixed: Color(0xffc3e8ff),
      onPrimaryFixed: Color(0xff000000),
      primaryFixedDim: Color(0xff8fcff3),
      onPrimaryFixedVariant: Color(0xff00131d),
      secondaryFixed: Color(0xffd1e4ff),
      onSecondaryFixed: Color(0xff000000),
      secondaryFixedDim: Color(0xffa0cafd),
      onSecondaryFixedVariant: Color(0xff001225),
      tertiaryFixed: Color(0xffcfe4ff),
      onTertiaryFixed: Color(0xff000000),
      tertiaryFixedDim: Color(0xff9dcafc),
      onTertiaryFixedVariant: Color(0xff001223),
      surfaceDim: Color(0xff0f1417),
      surfaceBright: Color(0xff4c5154),
      surfaceContainerLowest: Color(0xff000000),
      surfaceContainerLow: Color(0xff1b2023),
      surfaceContainer: Color(0xff2c3134),
      surfaceContainerHigh: Color(0xff373c3f),
      surfaceContainerHighest: Color(0xff42474b),
    );
  }

  ThemeData darkHighContrast() {
    return theme(darkHighContrastScheme());
  }

  ThemeData theme(ColorScheme colorScheme) => ThemeData(
        useMaterial3: true,
        brightness: colorScheme.brightness,
        colorScheme: colorScheme,
        textTheme: textTheme.apply(
          bodyColor: colorScheme.onSurface,
          displayColor: colorScheme.onSurface,
        ),
        scaffoldBackgroundColor: colorScheme.background,
        canvasColor: colorScheme.surface,
      );

  List<ExtendedColor> get extendedColors => [];
}
